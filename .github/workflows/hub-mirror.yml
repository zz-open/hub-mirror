name: hub-mirror
# 当新建或者修改 issues 时，触发当前 workflow
on:
  issues:
    types: [opened, edited]

permissions:
  actions: read/write
  contents: read/write
  id-token: write
  issues: read/write
  security-events: read/write

jobs:
  mirror_transfer:
    runs-on: ubuntu-latest
    # 运行条件 => issues 的 label 包含 hub-mirror
    if: contains(github.event.issue.labels.*.name, 'hub-mirror')
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Run code
        run: |
          go run main.go \
          --username=${{ secrets.DOCKER_LOGIN_USERNAME }} \
          --password=${{ secrets.DOCKER_LOGIN_PASSWORD }} \
          --server=${{ secrets.DOCKER_LOGIN_SERVER }} \
          --rawcontent='${{ github.event.issue.body }}' \
          --outputPath=output.sh
      # 4. 当成功输出 output.sh 文件时，为 issues 添加评论
      - name: Add comment
        if: ${{ hashFiles('output.sh') }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('output.js')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: await script({github, context, core})
            })
      # 5. 当以上步骤成功时，为 issues 添加 success 标签
      - name: Success issues
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['success']
            })
      # 6. 当以上步骤失败时，为 issues 添加 failure 标签，并为其添加失败原因评论
      - name: Failure issues
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['failure']
            })
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "[构建失败，点击查看](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            })